# 1. 애플리케이션을 위한 Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: grpc-test
---
# 2. Service: 타입을 LoadBalancer로 지정하여 L4 네트워크 로드밸런서를 생성
# Ingress와 관련된 모든 복잡한 어노테이션을 제거합니다.
apiVersion: v1
kind: Service
metadata:
  name: vac-hub-test-svc
  namespace: grpc-test
spec:
  # 이 타입이 L4 네트워크 로드밸런서를 생성합니다.
  type: LoadBalancer
  # 로드밸런서가 파드가 있는 노드로만 트래픽을 직접 보내도록 설정합니다.
  externalTrafficPolicy: Local
  selector:
    app: vac-hub-test
  ports:
  - name: grpc
    protocol: TCP
    # 외부에서는 80 포트로 접근하고, 내부 파드의 50051 포트로 전달됩니다.
    port: 80
    targetPort: 50051
---
# 3. 애플리케이션 Deployment (gRPC Health Probe 포함, 변경 없음)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vac-hub-test
  namespace: grpc-test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vac-hub-test
  template:
    metadata:
      labels:
        app: vac-hub-test
    spec:
      containers:
      - name: vac-hub-test-server
        image: "${REGION}-docker.pkg.dev/${PROJECT_ID}/grpc-test-repo/vac-hub-test:${IMAGE_TAG}" # 헬스체크 기능이 포함된 최신 이미지
        ports:
        - containerPort: 50051
        readinessProbe:
          grpc:
            port: 50051
---
# 4. HPA (변경 없음, 여전히 작동합니다)
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: vac-hub-test-hpa
  namespace: grpc-test
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: vac-hub-test
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: Pods
    pods:
      metric:
        name: grpc_server_active_calls_gauge
      target:
        type: AverageValue
        averageValue: "3"