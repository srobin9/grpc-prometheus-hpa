2025-07-22T04:39:53.263Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:39:53.263Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:39:47.325839671 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:39:52.327790098 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:39:53.426Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,job:vac-hub-service,instance:,cluster:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:40:03.264Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:40:03.264Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:39:57.329927534 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:40:02.332142491 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:40:03.315Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,instance:,location:,namespace:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:40:13.264Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:40:13.264Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:40:07.334563017 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:40:12.336589573 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:40:13.318Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,job:vac-hub-service,instance:,location:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:40:23.265Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:40:23.265Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:40:17.33886086 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:40:22.341264876 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:40:23.366Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,namespace:,cluster:,instance:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:40:33.265Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:40:33.265Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:40:27.343964633 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:40:32.346048439 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:40:33.316Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,namespace:,job:vac-hub-service,location:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:40:43.266Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:40:43.266Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:40:37.349381215 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:40:42.351731352 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:40:43.321Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,instance:,location:,job:vac-hub-service,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:40:53.266Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:40:53.266Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:40:47.354241108 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:40:52.356447954 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:40:53.352Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{cluster:,namespace:,job:vac-hub-service,instance:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:41:03.267Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:41:03.267Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:40:57.358774931 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:41:02.361082407 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:41:03.316Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{namespace:,job:vac-hub-service,cluster:,location:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:41:13.267Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:41:13.268Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:41:07.363121303 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:41:12.36599973 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:41:13.323Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,instance:,job:vac-hub-service,location:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:41:23.268Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:41:23.268Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:41:17.368263546 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:41:22.370879143 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:41:23.421Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,location:,cluster:,job:vac-hub-service,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:41:33.269Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:41:33.269Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:41:27.373095839 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:41:32.375062595 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:41:33.320Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,cluster:,job:vac-hub-service,namespace:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:41:43.269Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:41:43.269Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:41:37.377335142 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:41:42.379335659 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:41:43.315Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,namespace:,cluster:,location:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:41:53.270Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:41:53.270Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:41:47.381509114 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:41:52.383765911 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:41:53.371Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,instance:,cluster:,namespace:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:42:03.270Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:42:03.270Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:41:57.385741267 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:42:02.387804263 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:42:03.322Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,instance:,job:vac-hub-service,location:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:42:13.271Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:42:13.271Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:42:07.389978029 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:42:12.391923076 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:42:13.318Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,instance:,location:,cluster:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:42:23.272Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:42:23.272Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:42:17.393803192 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:42:22.396182058 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:42:23.391Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{instance:,cluster:,location:,job:vac-hub-service,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:42:33.273Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:42:33.273Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:42:27.398105114 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:42:32.400300551 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:42:33.322Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,namespace:,instance:,location:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:42:43.274Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:42:43.274Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:42:37.404322278 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:42:42.406799065 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:42:43.320Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,location:,job:vac-hub-service,cluster:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:42:53.274Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:42:53.274Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:42:47.408957551 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:42:52.411332697 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:42:53.405Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{cluster:,job:vac-hub-service,location:,instance:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:43:03.275Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:43:03.275Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:42:57.413781454 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:43:02.41590226 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:43:03.325Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,instance:,location:,cluster:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:43:13.275Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:43:13.276Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:43:07.417744846 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:43:12.419539532 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:43:13.328Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,job:vac-hub-service,location:,instance:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:43:23.276Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:43:23.276Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:43:17.421787458 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:43:22.424011555 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:43:23.383Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,namespace:,cluster:,location:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:43:33.276Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:43:33.277Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:43:27.426203691 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:43:32.428220977 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:43:33.328Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,namespace:,location:,instance:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:43:43.277Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:43:43.277Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:43:37.430410914 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:43:42.43277578 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:43:43.324Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,instance:,job:vac-hub-service,cluster:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:43:53.277Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:43:53.277Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:43:47.434922476 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:43:52.436780393 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:43:53.356Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,cluster:,instance:,namespace:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:44:03.278Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:44:03.278Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:43:57.438911229 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:44:02.440905375 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:44:03.332Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,instance:,namespace:,cluster:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:44:13.280Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:44:13.280Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:44:07.443015332 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:44:12.445180878 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:44:13.335Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,namespace:,job:vac-hub-service,instance:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:44:23.280Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:44:23.280Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:44:17.447332414 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:44:22.449728411 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:44:23.374Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,instance:,cluster:,job:vac-hub-service,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:44:33.280Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:44:33.281Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:44:27.452038557 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:44:32.454186713 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:44:33.326Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{instance:,cluster:,job:vac-hub-service,location:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:44:43.281Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:44:43.281Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:44:37.457190669 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:44:42.459734895 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:44:43.332Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,cluster:,instance:,location:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:44:53.282Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:44:53.282Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:44:47.461875981 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:44:52.464278046 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:44:53.415Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{job:vac-hub-service,location:,instance:,cluster:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:45:03.283Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:45:03.283Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:44:57.466539092 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:45:02.468645057 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:45:03.342Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,job:vac-hub-service,location:,instance:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:45:13.284Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:45:13.284Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:45:07.470899903 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:45:12.473252888 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:45:13.344Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{cluster:,location:,namespace:,instance:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:45:23.284Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:45:23.284Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:45:17.475602904 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:45:22.477782429 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:45:23.369Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,cluster:,instance:,namespace:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:45:33.285Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:45:33.285Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:45:27.479779985 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:45:32.4818917 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:45:33.335Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,namespace:,instance:,job:vac-hub-service,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:45:43.286Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:45:43.286Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:45:37.484480656 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:45:42.486600742 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:45:43.337Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,instance:,cluster:,job:vac-hub-service,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:45:53.286Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:45:53.286Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:45:47.488762687 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:45:52.49099793 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:45:53.363Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,location:,instance:,cluster:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:46:03.287Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:46:03.287Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:45:57.493260548 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:46:02.495532934 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:46:03.333Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,cluster:,namespace:,instance:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:46:13.287Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:46:13.287Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:46:07.497709719 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:46:12.499835385 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:46:13.339Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{instance:,namespace:,cluster:,location:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:46:23.287Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:46:23.287Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:46:17.50189251 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:46:22.504075256 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:46:23.370Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,location:,cluster:,job:vac-hub-service,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:46:33.288Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:46:33.288Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:46:27.506184312 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:46:32.509097818 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:46:33.340Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,job:vac-hub-service,instance:,cluster:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:46:43.288Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:46:43.288Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:46:37.512131524 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:46:42.514029839 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:46:43.340Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{location:,namespace:,cluster:,job:vac-hub-service,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:46:53.289Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:46:53.289Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:46:47.515996095 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:46:52.51806203 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:46:53.363Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,job:vac-hub-service,location:,instance:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:47:03.289Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:47:03.289Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:46:57.520011185 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:47:02.522054801 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:47:03.342Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,location:,cluster:,namespace:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:47:13.290Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:47:13.290Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:47:07.524598707 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:47:12.526592172 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:47:13.337Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,instance:,namespace:,location:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:47:23.291Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:47:23.291Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:47:17.529019928 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:47:22.531082283 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:47:23.408Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,job:vac-hub-service,cluster:,instance:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:47:33.293Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:47:33.293Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:47:27.533261309 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:47:32.535327324 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:47:33.341Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,location:,instance:,namespace:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:47:43.293Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:47:43.294Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:47:37.53753528 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:47:42.539546405 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:47:43.343Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{instance:,namespace:,job:vac-hub-service,location:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:47:53.295Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:47:53.295Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:47:47.541600281 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:47:52.543914247 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:47:53.424Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,namespace:,job:vac-hub-service,location:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:48:03.295Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:48:03.295Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:47:57.546620843 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:48:02.549011388 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:48:03.341Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,cluster:,instance:,job:vac-hub-service,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:48:13.295Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:48:13.296Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:48:07.551196394 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:48:12.553400759 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:48:13.343Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{location:,instance:,namespace:,job:vac-hub-service,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:48:23.296Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:48:23.296Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:48:17.555783815 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:48:22.558168221 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:48:23.420Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{instance:,cluster:,namespace:,job:vac-hub-service,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:48:33.297Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:48:33.297Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:48:27.560512256 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:48:32.562614012 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:48:33.341Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,namespace:,location:,job:vac-hub-service,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:48:43.297Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:48:43.297Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:48:37.565231418 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:48:42.567188803 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:48:43.344Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,location:,namespace:,instance:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:48:53.298Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:48:53.298Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:48:47.569515019 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:48:52.571810984 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:48:53.416Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,instance:,namespace:,cluster:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:49:03.299Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:49:03.299Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:48:57.57404262 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:49:02.575900905 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:49:03.351Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,instance:,job:vac-hub-service,namespace:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:49:13.300Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:49:13.300Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:49:07.577962071 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:49:12.579916026 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:49:13.352Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{job:vac-hub-service,instance:,location:,cluster:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:49:23.302Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:49:23.302Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:49:17.581869951 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:49:22.584292487 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:49:23.397Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{instance:,namespace:,location:,cluster:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:49:33.303Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:49:33.303Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:49:27.586569573 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:49:32.588915219 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:49:33.357Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,location:,cluster:,namespace:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:49:43.304Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:49:43.304Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:49:37.590998094 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:49:42.59388107 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:49:43.361Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,instance:,cluster:,namespace:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:49:53.304Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:49:53.304Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:49:47.596103655 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:49:52.598592331 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:49:53.434Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,location:,cluster:,job:vac-hub-service,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:50:03.305Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:50:03.305Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:49:57.601167577 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:50:02.603434082 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:50:03.352Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,cluster:,namespace:,instance:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:50:13.306Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:50:13.306Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:50:07.605439708 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:50:12.607394953 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:50:13.355Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,namespace:,instance:,cluster:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:50:23.307Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:50:23.307Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:50:17.610029439 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:50:22.612264505 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:50:23.359Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,job:vac-hub-service,namespace:,instance:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:50:33.307Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:50:33.308Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:50:27.61453098 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:50:32.616408896 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:50:33.359Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,instance:,cluster:,location:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:50:43.308Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:50:43.309Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:50:37.619414792 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:50:42.621584537 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:50:43.362Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,namespace:,cluster:,job:vac-hub-service,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:50:53.309Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:50:53.309Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:50:47.624116183 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:50:52.626229118 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:50:53.396Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{job:vac-hub-service,namespace:,instance:,cluster:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:51:03.309Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:51:03.310Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:50:57.628406424 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:51:02.630349989 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:51:03.359Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,cluster:,namespace:,instance:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:51:13.311Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:51:13.311Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:51:07.632576425 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:51:12.63442016 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:51:13.355Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,location:,job:vac-hub-service,cluster:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:51:23.311Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:51:23.312Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:51:17.636944576 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:51:22.639175402 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:51:23.387Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{cluster:,job:vac-hub-service,namespace:,instance:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:51:33.312Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:51:33.313Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:51:27.641195167 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:51:32.643328513 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:51:33.362Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,cluster:,location:,job:vac-hub-service,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:51:43.314Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:51:43.314Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:51:37.646089199 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:51:42.648068204 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:51:43.364Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,location:,job:vac-hub-service,namespace:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:51:53.315Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:51:53.315Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:51:47.649893379 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:51:52.651923265 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:51:53.365Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,instance:,cluster:,job:vac-hub-service,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:52:03.315Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:52:03.316Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:51:57.65379181 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:52:02.655771486 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:52:03.364Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,job:vac-hub-service,cluster:,namespace:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:52:13.316Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:52:13.317Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:52:07.658071152 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:52:12.659961957 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:52:13.389Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,job:vac-hub-service,cluster:,instance:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:52:23.317Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:52:23.317Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:52:17.662270613 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:52:22.664136668 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:52:23.391Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,cluster:,instance:,job:vac-hub-service,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:52:33.318Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:52:33.318Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:52:27.666498344 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:52:32.66873952 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:52:33.372Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,location:,cluster:,instance:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:52:43.318Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:52:43.318Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:52:37.670942725 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:52:42.67282534 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:52:43.389Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,namespace:,job:vac-hub-service,cluster:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:52:53.320Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:52:53.320Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:52:47.676212506 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:52:52.678285732 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:52:53.367Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,job:vac-hub-service,cluster:,instance:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:53:03.320Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:53:03.320Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:52:57.680450277 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:53:02.682274323 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:53:03.375Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,cluster:,namespace:,location:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:53:13.320Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:53:13.321Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:53:07.684774569 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:53:12.686787234 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:53:13.366Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,instance:,cluster:,namespace:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:53:23.321Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:53:23.321Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:53:17.68885254 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:53:22.691285225 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:53:23.415Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{location:,instance:,cluster:,namespace:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:53:33.322Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:53:33.322Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:53:27.693312501 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:53:32.695400416 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:53:33.374Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,cluster:,namespace:,instance:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:53:43.322Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:53:43.322Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:53:37.697267592 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:53:42.699482168 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:53:43.376Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,location:,instance:,cluster:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:53:53.324Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:53:53.324Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:53:47.701759923 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:53:52.703609659 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:53:53.429Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,location:,job:vac-hub-service,cluster:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:54:03.324Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:54:03.324Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:53:57.705788904 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:54:02.70789544 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:54:03.373Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,location:,cluster:,instance:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:54:13.324Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:54:13.324Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:54:07.710414126 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:54:12.712650781 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:54:13.374Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,namespace:,cluster:,location:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:54:23.325Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:54:23.325Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:54:17.714784586 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:54:22.716828272 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:54:23.419Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,job:vac-hub-service,location:,namespace:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:54:33.325Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:54:33.325Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:54:27.718982668 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:54:32.721315233 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:54:33.376Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,instance:,location:,cluster:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:54:43.326Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:54:43.327Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:54:37.723966859 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:54:42.725904644 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:54:43.389Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,cluster:,namespace:,instance:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:54:53.327Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:54:53.328Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:54:47.7281056 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:54:52.730330265 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:54:53.400Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,location:,cluster:,job:vac-hub-service,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:55:03.328Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:55:03.328Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:54:57.732380041 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:55:02.734426787 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:55:03.389Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,location:,instance:,job:vac-hub-service,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:55:13.329Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:55:13.329Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:55:07.736773322 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:55:12.739129798 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:55:13.389Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{location:,namespace:,job:vac-hub-service,cluster:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:55:23.330Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:55:23.330Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:55:17.741594983 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:55:22.743760489 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:55:23.376Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{namespace:,job:vac-hub-service,location:,cluster:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:55:33.331Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:55:33.332Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:55:27.745812595 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:55:32.74836976 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:55:33.379Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,instance:,location:,job:vac-hub-service,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:55:43.332Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:55:43.333Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:55:37.750513626 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:55:42.752457931 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:55:43.389Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,location:,instance:,job:vac-hub-service,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:55:53.333Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:55:53.333Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:55:47.754994127 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:55:52.757176673 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:55:53.401Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{instance:,namespace:,location:,job:vac-hub-service,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:56:03.334Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:56:03.334Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:55:57.759015728 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:56:02.760859803 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:56:03.390Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,job:vac-hub-service,location:,namespace:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:56:13.335Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:56:13.335Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:56:07.763002169 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:56:12.765265555 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:56:13.390Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,job:vac-hub-service,location:,instance:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:56:23.336Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:56:23.336Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:56:17.76746728 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:56:22.769475696 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:56:23.411Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,cluster:,job:vac-hub-service,namespace:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:56:33.337Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:56:33.337Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:56:27.772234911 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:56:32.774106637 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:56:33.384Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{cluster:,instance:,location:,job:vac-hub-service,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:56:43.338Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:56:43.338Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:56:37.777185183 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:56:42.778907508 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:56:43.390Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,cluster:,namespace:,location:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:56:53.339Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:56:53.339Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:56:47.780874593 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:56:52.782799119 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:56:53.419Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,job:vac-hub-service,location:,namespace:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:57:03.340Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:57:03.341Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:56:57.784809654 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:57:02.78684499 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:57:03.392Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,cluster:,namespace:,instance:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:57:13.341Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:57:13.342Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:57:07.788766206 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:57:12.790986651 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:57:13.392Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{namespace:,location:,instance:,job:vac-hub-service,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:57:23.342Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:57:23.342Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:57:17.793226266 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:57:22.795296662 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:57:23.436Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{namespace:,location:,job:vac-hub-service,cluster:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:57:33.343Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:57:33.343Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:57:27.797427768 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:57:32.799599023 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:57:33.389Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,cluster:,location:,job:vac-hub-service,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:57:43.344Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:57:43.344Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:57:37.801386259 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:57:42.803587774 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:57:43.396Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{cluster:,job:vac-hub-service,location:,namespace:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:57:53.345Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:57:53.346Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:57:47.80561619 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:57:52.807626845 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:57:53.392Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{namespace:,job:vac-hub-service,cluster:,location:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:58:03.347Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:58:03.347Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:57:57.809597441 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:58:02.811774416 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:58:03.400Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,namespace:,location:,cluster:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:58:13.347Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:58:13.348Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:58:07.813928912 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:58:12.816011257 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:58:13.398Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,namespace:,cluster:,location:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:58:23.348Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:58:23.348Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:58:17.818167042 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:58:22.820332388 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:58:23.403Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,location:,job:vac-hub-service,instance:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:58:33.348Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:58:33.348Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:58:27.822744034 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:58:32.825208859 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:58:33.396Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{job:vac-hub-service,instance:,cluster:,namespace:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:58:43.349Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:58:43.349Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:58:37.829153795 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:58:42.831781866 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:58:43.399Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,instance:,location:,cluster:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:58:53.350Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:58:53.350Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:58:47.834407287 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:58:52.836833913 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:58:53.444Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,location:,cluster:,namespace:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:59:03.350Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:59:03.350Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:58:57.838831968 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:59:02.840922373 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:59:03.400Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,location:,job:vac-hub-service,instance:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:59:13.350Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:59:13.351Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:59:07.842996499 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:59:12.845066745 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:59:13.399Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,namespace:,job:vac-hub-service,cluster:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:59:23.351Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:59:23.351Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:59:17.84699387 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:59:22.849397345 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:59:23.419Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,namespace:,location:,instance:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:59:33.352Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:59:33.352Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:59:27.851585401 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:59:32.853793996 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:59:33.401Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{cluster:,job:vac-hub-service,location:,namespace:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:59:43.353Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:59:43.353Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:59:37.856838953 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:59:42.859179248 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:59:43.406Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{job:vac-hub-service,instance:,namespace:,cluster:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T04:59:53.354Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T04:59:53.354Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:59:47.861727673 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:59:52.863769389 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T04:59:53.467Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,cluster:,namespace:,instance:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:00:03.355Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:00:03.355Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 04:59:57.866005775 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:00:02.86834297 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:00:03.405Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,location:,cluster:,instance:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:00:13.356Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:00:13.356Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:00:07.870633616 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:00:12.873037332 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:00:13.405Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{location:,namespace:,instance:,cluster:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:00:23.357Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:00:23.357Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:00:17.875311567 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:00:22.877768963 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:00:23.408Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,cluster:,location:,instance:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:00:33.357Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:00:33.357Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:00:27.880126478 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:00:32.882276944 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:00:33.405Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,job:vac-hub-service,namespace:,location:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:00:43.388Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:00:43.389Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:00:37.88540135 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:00:42.887647906 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:00:43.435Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,location:,job:vac-hub-service,instance:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:00:53.390Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:00:53.390Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:00:47.889803221 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:00:52.891785797 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:00:53.440Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{instance:,location:,job:vac-hub-service,cluster:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:01:03.390Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:01:03.390Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:00:57.893965092 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:01:02.896342858 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:01:03.445Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,job:vac-hub-service,instance:,namespace:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:01:13.391Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:01:13.391Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:01:07.898767784 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:01:12.901104539 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:01:13.442Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{job:vac-hub-service,cluster:,location:,namespace:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:01:23.392Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:01:23.392Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:01:17.903391845 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:01:22.906118841 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:01:23.442Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{namespace:,cluster:,job:vac-hub-service,instance:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:01:33.393Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:01:33.393Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:01:27.908183286 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:01:32.910241332 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:01:33.445Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,cluster:,instance:,location:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:01:43.394Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:01:43.395Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:01:37.912510457 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:01:42.915116649 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:01:43.450Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,job:vac-hub-service,namespace:,instance:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:01:53.395Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:01:53.395Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:01:47.917719037 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:01:52.919802025 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:01:53.449Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,cluster:,job:vac-hub-service,namespace:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:02:03.396Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:02:03.396Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:01:57.922046053 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:02:02.9243162 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:02:03.448Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{namespace:,instance:,job:vac-hub-service,cluster:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:02:13.397Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:02:13.398Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:02:07.926447188 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:02:12.928508255 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:02:13.452Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,cluster:,namespace:,instance:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:02:23.398Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:02:23.399Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:02:17.930652023 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:02:22.933244901 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:02:23.450Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,instance:,location:,namespace:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:02:33.399Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:02:33.399Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:02:27.935193289 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:02:32.937433737 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:02:33.456Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,instance:,job:vac-hub-service,cluster:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:02:43.399Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:02:43.399Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:02:37.940633704 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:02:42.942621042 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:02:43.448Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{cluster:,instance:,location:,namespace:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:02:53.400Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:02:53.400Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:02:47.94493111 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:02:52.947219168 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:02:53.449Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,namespace:,cluster:,job:vac-hub-service,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:03:03.401Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:03:03.401Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:02:57.949421815 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:03:02.951744773 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:03:03.452Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{instance:,location:,job:vac-hub-service,cluster:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:03:13.401Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:03:13.401Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:03:07.954272021 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:03:12.956363409 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:03:13.451Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{job:vac-hub-service,location:,namespace:,cluster:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:03:23.401Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:03:23.401Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:03:17.958617236 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:03:22.960781844 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:03:23.452Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{namespace:,cluster:,job:vac-hub-service,instance:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:03:33.402Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:03:33.403Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:03:27.963028982 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:03:32.96526414 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:03:33.450Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,job:vac-hub-service,cluster:,instance:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:03:43.403Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:03:43.403Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:03:37.967826358 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:03:42.970119015 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:03:43.456Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,cluster:,job:vac-hub-service,instance:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:03:53.403Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:03:53.403Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:03:47.972311463 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:03:52.974759481 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:03:53.459Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,instance:,location:,job:vac-hub-service,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:04:03.405Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:04:03.405Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:03:57.976641208 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:04:02.978857056 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:04:03.457Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{instance:,location:,namespace:,cluster:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:04:13.405Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:04:13.405Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:04:07.980867104 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:04:12.982776141 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:04:13.457Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,instance:,namespace:,location:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:04:23.406Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:04:23.406Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:04:17.985464259 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:04:22.987780277 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:04:23.461Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{job:vac-hub-service,location:,cluster:,namespace:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:04:33.406Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:04:33.406Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:04:27.989870685 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:04:32.991719392 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:04:33.460Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,cluster:,namespace:,location:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:04:43.407Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:04:43.408Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:04:37.99423166 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:04:42.996530118 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:04:43.458Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,instance:,cluster:,namespace:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:04:53.408Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:04:53.408Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:04:47.998628916 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:04:53.000820343 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:04:53.454Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,instance:,namespace:,cluster:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:05:03.409Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:05:03.409Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:04:58.003035341 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:05:03.005169218 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:05:03.459Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,job:vac-hub-service,namespace:,location:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:05:13.410Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:05:13.410Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:05:08.007643167 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:05:13.009775794 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:05:13.457Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,namespace:,instance:,job:vac-hub-service,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:05:23.411Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:05:23.411Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:05:18.012286952 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:05:23.01426251 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:05:23.469Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,job:vac-hub-service,cluster:,namespace:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:05:33.413Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:05:33.413Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:05:28.016525948 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:05:33.018804905 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:05:33.460Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{namespace:,location:,cluster:,instance:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:05:43.414Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:05:43.414Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:05:38.020848693 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:05:43.02309222 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:05:43.462Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,job:vac-hub-service,namespace:,cluster:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:05:53.415Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:05:53.415Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:05:48.025171398 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:05:53.027142016 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:05:53.462Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,location:,instance:,job:vac-hub-service,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:06:03.416Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:06:03.417Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:05:58.029167393 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:06:03.031276441 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:06:03.467Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,cluster:,location:,instance:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:06:13.418Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:06:13.418Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:06:08.033448089 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:06:13.035722897 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:06:13.469Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{location:,cluster:,instance:,job:vac-hub-service,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:06:23.419Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:06:23.419Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:06:18.037896644 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:06:23.040045632 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:06:23.473Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,cluster:,instance:,namespace:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:06:33.419Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:06:33.419Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:06:28.042037689 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:06:33.043922137 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:06:33.473Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,location:,instance:,job:vac-hub-service,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:06:43.420Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:06:43.420Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:06:38.048084455 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:06:43.050297593 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:06:43.471Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{cluster:,location:,namespace:,instance:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:06:53.421Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:06:53.421Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:06:48.052548051 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:06:53.054849689 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:06:53.473Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,instance:,job:vac-hub-service,namespace:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:07:03.422Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:07:03.422Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:06:58.056596626 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:07:03.058802434 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:07:03.473Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,instance:,location:,namespace:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:07:13.423Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:07:13.423Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:07:08.061002272 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:07:13.063119889 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:07:13.469Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,instance:,job:vac-hub-service,cluster:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:07:23.424Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:07:23.424Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:07:18.064973997 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:07:23.067121385 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:07:23.476Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{cluster:,job:vac-hub-service,location:,namespace:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:07:33.425Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:07:33.425Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:07:28.069423482 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:07:33.07180811 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:07:33.476Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,location:,job:vac-hub-service,cluster:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:07:43.426Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:07:43.426Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:07:38.074369188 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:07:43.076312045 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:07:43.479Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{instance:,location:,job:vac-hub-service,cluster:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:07:53.427Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:07:53.427Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:07:48.078455563 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:07:53.080554571 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:07:53.479Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,instance:,cluster:,location:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:08:03.428Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:08:03.429Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:07:58.082828058 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:08:03.138836918 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:08:03.481Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{job:vac-hub-service,namespace:,instance:,cluster:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:08:13.429Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:08:13.429Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:08:08.140940526 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:08:13.143418013 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:08:13.479Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,instance:,namespace:,cluster:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:08:23.430Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:08:23.430Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:08:18.145475201 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:08:23.147634199 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:08:23.482Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,location:,instance:,cluster:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:08:33.431Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:08:33.431Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:08:28.149923887 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:08:33.151807304 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:08:33.479Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,job:vac-hub-service,cluster:,location:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:08:43.432Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:08:43.432Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:08:38.154550132 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:08:43.15655935 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:08:43.484Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,namespace:,job:vac-hub-service,cluster:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:08:53.433Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:08:53.434Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:08:48.158966157 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:08:53.160875805 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:08:53.484Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{location:,namespace:,job:vac-hub-service,instance:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:09:03.435Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:09:03.435Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:08:58.162911753 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:09:03.165079321 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:09:03.490Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,job:vac-hub-service,namespace:,location:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:09:13.435Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:09:13.435Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:09:08.166942478 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:09:13.168928866 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:09:13.483Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,instance:,namespace:,location:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:09:23.436Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:09:23.437Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:09:18.174547095 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:09:23.176806623 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:09:23.489Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{cluster:,instance:,location:,namespace:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:09:33.437Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:09:33.438Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:09:28.17903817 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:09:33.181371688 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:09:33.484Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,cluster:,namespace:,location:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:09:43.439Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:09:43.439Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:09:38.183868846 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:09:43.185942564 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:09:43.485Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,instance:,namespace:,cluster:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:09:53.440Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:09:53.440Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:09:48.188281391 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:09:53.190731899 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:09:53.492Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{instance:,location:,namespace:,cluster:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:10:03.440Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:10:03.441Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:09:58.192910337 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:10:03.194987115 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:10:03.495Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,location:,instance:,job:vac-hub-service,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:10:13.441Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:10:13.441Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:10:08.197224272 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:10:13.19917686 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:10:13.488Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{namespace:,instance:,cluster:,job:vac-hub-service,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:10:23.442Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:10:23.442Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:10:18.201706788 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:10:23.203967995 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:10:23.492Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{cluster:,instance:,job:vac-hub-service,location:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:10:33.443Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:10:33.443Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:10:28.205991823 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:10:33.208187161 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:10:33.498Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,job:vac-hub-service,location:,cluster:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:10:43.444Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:10:43.444Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:10:38.211022679 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:10:43.213161896 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:10:43.499Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,location:,namespace:,instance:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:10:53.445Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:10:53.445Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:10:48.215155354 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:10:53.217261992 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:10:53.494Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,instance:,cluster:,namespace:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:11:03.446Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:11:03.446Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:10:58.219441559 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:11:03.221469825 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:11:03.497Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{instance:,job:vac-hub-service,location:,namespace:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:11:13.447Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:11:13.447Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:11:08.223748554 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:11:13.226121532 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:11:13.503Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,location:,cluster:,namespace:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:11:23.448Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:11:23.448Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:11:18.2285557 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:11:23.230493728 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:11:23.500Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{job:vac-hub-service,namespace:,cluster:,instance:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:11:33.449Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:11:33.449Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:11:28.232879856 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:11:33.235488294 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:11:33.505Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,namespace:,cluster:,instance:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:11:43.450Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:11:43.450Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:11:38.237406961 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:11:43.239503399 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:11:43.494Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,namespace:,instance:,cluster:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:11:53.451Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:11:53.451Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:11:48.241904327 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:11:53.244157055 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:11:53.506Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{cluster:,namespace:,job:vac-hub-service,location:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:12:03.452Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:12:03.453Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:11:58.246543923 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:12:03.2485174 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:12:03.506Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,cluster:,job:vac-hub-service,instance:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:12:13.454Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:12:13.454Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:12:08.250731958 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:12:13.252759905 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:12:13.513Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,namespace:,cluster:,instance:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:12:23.455Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:12:23.455Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:12:18.254977953 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:12:23.257056 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:12:23.504Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,cluster:,location:,namespace:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:12:33.455Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:12:33.455Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:12:28.259238328 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:12:33.261652386 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:12:33.509Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{job:vac-hub-service,instance:,namespace:,cluster:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:12:43.456Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:12:43.456Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:12:38.265309824 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:12:43.267711642 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:12:43.506Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,instance:,job:vac-hub-service,location:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:12:53.457Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:12:53.457Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:12:48.2697981 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:12:53.271807938 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:12:53.505Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{job:vac-hub-service,cluster:,location:,namespace:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:13:03.458Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:13:03.459Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:12:58.273994145 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:13:03.275975913 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:13:03.505Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,namespace:,instance:,cluster:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:13:13.459Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:13:13.459Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:13:08.278159591 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:13:13.280648649 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:13:13.510Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,instance:,cluster:,namespace:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:13:23.460Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:13:23.460Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:13:18.282737016 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:13:23.284643984 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:13:23.511Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,job:vac-hub-service,namespace:,instance:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:13:33.461Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:13:33.461Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:13:28.286763692 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:13:33.288896189 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:13:33.517Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{namespace:,job:vac-hub-service,cluster:,instance:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:13:43.462Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:13:43.463Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:13:38.290970887 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:13:43.292994774 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:13:43.513Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,instance:,location:,cluster:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:13:53.463Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:13:53.463Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:13:48.294947102 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:13:53.297361339 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:13:53.513Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,cluster:,instance:,namespace:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:14:03.463Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:14:03.463Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:13:58.300579258 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:14:03.302786775 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:14:03.516Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{namespace:,location:,cluster:,instance:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:14:13.465Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:14:13.465Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:14:08.304918793 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:14:13.307143211 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:14:13.518Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,namespace:,instance:,cluster:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:14:23.466Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:14:23.466Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:14:18.309387928 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:14:23.311503166 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:14:23.516Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{cluster:,location:,job:vac-hub-service,namespace:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:14:33.467Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:14:33.467Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:14:28.313495294 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:14:33.315454741 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:14:33.522Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,instance:,cluster:,job:vac-hub-service,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:14:43.467Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:14:43.468Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:14:38.318541749 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:14:43.320999527 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:14:43.516Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{cluster:,location:,job:vac-hub-service,namespace:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:14:53.468Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:14:53.468Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:14:48.323081485 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:14:53.325413193 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:14:53.522Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{cluster:,namespace:,location:,job:vac-hub-service,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:15:03.469Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:15:03.469Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:14:58.32736786 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:15:03.329529098 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:15:03.522Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,instance:,job:vac-hub-service,location:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:15:13.470Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:15:13.471Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:15:08.331744096 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:15:13.333780473 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:15:13.523Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,job:vac-hub-service,namespace:,instance:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:15:23.472Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:15:23.472Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:15:18.335802251 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:15:23.338109559 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:15:23.526Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,instance:,job:vac-hub-service,namespace:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:15:33.473Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:15:33.473Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:15:28.340230406 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:15:33.342168234 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:15:33.520Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,location:,cluster:,namespace:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:15:43.474Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:15:43.474Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:15:38.344162772 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:15:43.345979029 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:15:43.523Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,instance:,location:,cluster:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:15:53.475Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:15:53.475Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:15:48.348194847 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:15:53.350338465 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:15:53.523Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,namespace:,location:,instance:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:16:03.475Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:16:03.475Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:15:58.352319212 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:16:03.35441659 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:16:03.526Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,namespace:,instance:,job:vac-hub-service,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:16:13.476Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:16:13.476Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:16:08.356578847 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:16:13.358835635 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:16:13.526Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,location:,cluster:,namespace:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:16:23.477Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:16:23.477Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:16:18.361257873 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:16:23.36333506 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:16:23.524Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{namespace:,location:,job:vac-hub-service,cluster:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:16:33.477Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:16:33.477Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:16:28.366214008 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:16:33.368293606 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:16:33.529Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{location:,namespace:,cluster:,instance:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:16:43.478Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:16:43.478Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:16:38.371250494 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:16:43.373108702 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:16:43.526Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{instance:,namespace:,location:,job:vac-hub-service,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:16:53.479Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:16:53.480Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:16:48.390471285 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:16:53.392788703 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:16:53.535Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{job:vac-hub-service,location:,instance:,namespace:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:17:03.481Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:17:03.481Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:16:58.394944091 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:17:03.396771089 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:17:03.533Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{job:vac-hub-service,instance:,cluster:,location:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:17:13.482Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:17:13.482Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:17:08.399066186 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:17:13.401164704 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:17:13.534Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{namespace:,job:vac-hub-service,cluster:,instance:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:17:23.483Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:17:23.483Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:17:18.403996592 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:17:23.40601374 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:17:23.533Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,instance:,location:,job:vac-hub-service,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:17:33.483Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:17:33.483Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:17:28.408219737 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:17:33.410479695 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:17:33.536Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,cluster:,location:,job:vac-hub-service,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:17:43.484Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:17:43.484Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:17:38.412529733 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:17:43.414723991 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:17:43.530Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{job:vac-hub-service,namespace:,location:,cluster:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:17:53.485Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:17:53.485Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:17:48.416782568 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:17:53.418867406 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:17:53.534Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,instance:,cluster:,location:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:18:03.486Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:18:03.486Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:17:58.421218133 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:18:03.423204631 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:18:03.541Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,instance:,cluster:,job:vac-hub-service,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:18:13.487Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:18:13.487Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:18:08.425196149 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:18:13.427233017 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:18:13.539Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,instance:,cluster:,location:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:18:23.488Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:18:23.488Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:18:18.429659915 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:18:23.431981812 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:18:23.537Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,instance:,job:vac-hub-service,location:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:18:33.489Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:18:33.489Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:18:28.4338569 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:18:33.435766297 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:18:33.547Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{cluster:,location:,instance:,job:vac-hub-service,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:18:43.490Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:18:43.490Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:18:38.438441575 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:18:43.440191903 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:18:43.541Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{job:vac-hub-service,location:,instance:,namespace:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:18:53.491Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:18:53.491Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:18:48.442140461 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:18:53.444181019 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:18:53.545Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,job:vac-hub-service,cluster:,namespace:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:19:03.491Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:19:03.491Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:18:58.446394256 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:19:03.448538985 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:19:03.544Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{instance:,location:,namespace:,job:vac-hub-service,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:19:13.492Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:19:13.492Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:19:08.450741177 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:19:13.453220491 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:19:13.546Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,cluster:,namespace:,location:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:19:23.493Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:19:23.493Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:19:18.455689854 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:19:23.457832278 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:19:23.543Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,job:vac-hub-service,instance:,namespace:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:19:33.494Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:19:33.494Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:19:28.459777951 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:19:33.461773906 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:19:33.551Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{job:vac-hub-service,cluster:,location:,instance:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:19:43.495Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:19:43.495Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:19:38.463703288 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:19:43.4658567 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:19:43.639Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{location:,namespace:,cluster:,job:vac-hub-service,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:19:53.496Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:19:53.496Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:19:48.467779892 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:19:53.469974485 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:19:53.544Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,instance:,cluster:,location:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:20:03.497Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:20:03.497Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:19:58.472207307 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:20:03.474602179 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:20:03.552Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{instance:,cluster:,namespace:,job:vac-hub-service,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:20:13.498Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:20:13.498Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:20:08.476969321 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:20:13.479225813 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:20:13.547Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,instance:,job:vac-hub-service,location:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:20:23.499Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:20:23.499Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:20:18.481645966 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:20:23.483741598 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:20:23.550Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,instance:,namespace:,cluster:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:20:33.500Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:20:33.500Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:20:28.48620912 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:20:33.488721293 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:20:33.552Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{job:vac-hub-service,instance:,cluster:,location:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:20:43.501Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:20:43.501Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:20:38.491568975 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:20:43.494422098 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:20:43.557Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{instance:,namespace:,job:vac-hub-service,cluster:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:20:53.502Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:20:53.502Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:20:48.49692821 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:20:53.499205682 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:20:53.556Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{namespace:,job:vac-hub-service,location:,instance:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:21:03.504Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 1, "metrics": 1, "data points": 1}
2025-07-22T05:21:03.504Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:20:58.502047945 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:21:03.556Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,instance:,location:,namespace:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:3  errors:{status:{code:3}  point_count:3}", "dropped_items": 1}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:21:13.508Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:21:13.508Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:21:03.504431837 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:21:08.50709486 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:21:13.563Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{namespace:,location:,cluster:,job:vac-hub-service,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:21:23.510Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:21:23.510Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:21:13.509139892 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:21:18.512369264 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:21:23.563Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,instance:,namespace:,cluster:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:21:33.513Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:21:33.514Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:21:23.514582187 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:21:28.516763529 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:21:33.560Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,location:,job:vac-hub-service,instance:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:21:43.516Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:21:43.516Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:21:33.519239111 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:21:38.521285533 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:21:43.562Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,namespace:,location:,instance:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:21:53.518Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:21:53.518Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:21:43.523435365 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:21:48.525710987 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:21:53.568Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{job:vac-hub-service,location:,namespace:,instance:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:22:03.521Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:22:03.521Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:21:53.527772169 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:21:58.529869832 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:22:03.570Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,job:vac-hub-service,cluster:,instance:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:22:13.523Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:22:13.523Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:22:03.532641074 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:22:08.534548516 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:22:13.571Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{location:,namespace:,cluster:,instance:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:22:23.526Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:22:23.526Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:22:13.536712769 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:22:18.538530841 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:22:23.577Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,location:,namespace:,cluster:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:22:33.527Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:22:33.527Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:22:23.540712773 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:22:28.542618205 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:22:33.575Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,namespace:,instance:,job:vac-hub-service,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:22:43.528Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:22:43.528Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:22:33.545037587 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:22:38.54738553 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:22:43.584Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,instance:,location:,cluster:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:22:53.528Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:22:53.528Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:22:43.549690462 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:22:48.551526404 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:22:53.575Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,cluster:,location:,job:vac-hub-service,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:23:03.531Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:23:03.531Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:22:53.553805836 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:22:58.555994648 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:23:03.590Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,job:vac-hub-service,cluster:,namespace:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:23:13.534Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:23:13.535Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:23:03.558433441 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:23:08.560328632 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:23:13.590Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,location:,cluster:,instance:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:23:23.537Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:23:23.537Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:23:13.562720095 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:23:18.564591397 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:23:23.590Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,namespace:,cluster:,instance:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:23:33.539Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:23:33.539Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:23:23.566891429 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:23:28.568856932 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:23:33.589Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,cluster:,job:vac-hub-service,instance:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:23:43.542Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:23:43.542Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:23:33.571442614 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:23:38.573618826 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:23:43.639Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{job:vac-hub-service,location:,instance:,cluster:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:23:53.545Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:23:53.545Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:23:43.638910133 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:23:48.640950116 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:23:53.595Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,namespace:,location:,cluster:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:24:03.547Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:24:03.547Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:23:53.643064648 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:23:58.645068251 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:24:03.598Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{job:vac-hub-service,namespace:,location:,cluster:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:24:13.549Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:24:13.549Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:24:03.647400463 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:24:08.649600195 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:24:13.606Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,cluster:,instance:,namespace:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:24:23.551Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:24:23.551Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:24:13.652142097 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:24:18.653989949 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:24:23.603Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,location:,namespace:,cluster:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:24:33.552Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:24:33.553Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:24:23.656203002 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:24:28.658448054 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:24:33.602Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{namespace:,job:vac-hub-service,instance:,cluster:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:24:43.554Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:24:43.554Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:24:33.660562476 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:24:38.662770578 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:24:43.639Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,cluster:,job:vac-hub-service,instance:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:24:53.556Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:24:53.556Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:24:43.665113691 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:24:48.667337503 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:24:53.605Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,job:vac-hub-service,location:,namespace:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:25:03.559Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:25:03.559Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:24:53.669641625 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:24:58.671949207 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:25:03.611Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,instance:,job:vac-hub-service,namespace:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:25:13.562Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:25:13.562Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:25:03.67455736 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:25:08.676545672 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:25:13.619Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,cluster:,job:vac-hub-service,namespace:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:25:23.565Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:25:23.565Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:25:13.678586675 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:25:18.681059647 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:25:23.616Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,instance:,location:,cluster:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:25:33.567Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:25:33.568Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:25:23.683201809 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:25:28.685075701 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:25:33.621Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,cluster:,instance:,job:vac-hub-service,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:25:43.568Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:25:43.568Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:25:33.687221253 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:25:38.689198805 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:25:43.639Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{job:vac-hub-service,cluster:,instance:,location:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:25:53.569Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:25:53.569Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:25:43.691532188 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:25:48.69383389 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:25:53.620Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,cluster:,location:,namespace:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:26:03.571Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:26:03.572Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:25:53.696234522 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:25:58.698811634 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:26:03.628Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,namespace:,job:vac-hub-service,instance:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:26:13.574Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:26:13.574Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:26:03.701132877 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:26:08.703494149 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:26:13.622Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{instance:,namespace:,location:,job:vac-hub-service,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:26:23.574Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:26:23.575Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:26:13.705966551 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:26:18.707835683 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:26:23.618Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,job:vac-hub-service,instance:,location:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:26:33.575Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:26:33.575Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:26:23.710177995 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:26:28.712253957 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:26:33.623Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,job:vac-hub-service,namespace:,location:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:26:43.576Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:26:43.577Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:26:33.714587879 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:26:38.716577122 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:26:43.639Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,cluster:,location:,namespace:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:26:53.579Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:26:53.579Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:26:43.718857064 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:26:48.721230296 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:26:53.740Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,namespace:,location:,job:vac-hub-service,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:27:03.579Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:27:03.580Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:26:53.723165698 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:26:58.72561156 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:27:03.630Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{job:vac-hub-service,instance:,namespace:,cluster:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:27:13.581Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:27:13.581Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:27:03.728196623 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:27:08.730852255 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:27:13.631Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{location:,instance:,job:vac-hub-service,namespace:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:27:23.582Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:27:23.582Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:27:13.732988477 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:27:18.73509591 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:27:23.632Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,job:vac-hub-service,instance:,cluster:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:27:33.583Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:27:33.583Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:27:23.737303432 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:27:28.739636424 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:27:33.644Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,cluster:,instance:,job:vac-hub-service,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:27:43.639Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:27:43.639Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:27:33.741753446 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:27:38.743946019 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:27:43.695Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,location:,instance:,cluster:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:27:53.640Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:27:53.640Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:27:43.746048781 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:27:48.748160623 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:27:53.695Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,cluster:,job:vac-hub-service,namespace:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:28:03.641Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:28:03.641Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:27:53.750382915 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:27:58.752315967 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:28:03.691Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,location:,job:vac-hub-service,namespace:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:28:13.642Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:28:13.643Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:28:03.75413921 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:28:08.756026511 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:28:13.692Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{location:,instance:,cluster:,namespace:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:28:23.643Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:28:23.644Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:28:13.758097574 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:28:18.760240286 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:28:23.699Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,namespace:,instance:,job:vac-hub-service,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:28:33.644Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:28:33.645Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:28:23.762051038 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:28:28.76413268 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:28:33.692Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{instance:,cluster:,location:,namespace:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:28:43.645Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:28:43.646Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:28:33.766551583 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:28:38.768642915 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:28:43.696Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,location:,job:vac-hub-service,namespace:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:28:53.647Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:28:53.647Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:28:43.888858425 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:28:48.892875658 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:28:53.735Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,namespace:,location:,cluster:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:29:03.647Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:29:03.648Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:28:53.895053741 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:28:58.897108953 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:29:03.705Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{job:vac-hub-service,namespace:,location:,cluster:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:29:13.648Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:29:13.648Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:29:03.899074775 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:29:08.901185057 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:29:13.702Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,cluster:,namespace:,job:vac-hub-service,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:29:23.649Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:29:23.650Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:29:13.903253919 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:29:18.905603091 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:29:23.701Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,instance:,cluster:,location:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:29:33.651Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:29:33.651Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:29:23.907968324 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:29:28.909782106 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:29:33.705Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{namespace:,cluster:,job:vac-hub-service,instance:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:29:43.652Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:29:43.652Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:29:33.912020148 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:29:38.91404221 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:29:43.703Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,cluster:,job:vac-hub-service,instance:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:29:53.653Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:29:53.653Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:29:43.916093533 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:29:48.918434555 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:29:53.699Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{cluster:,instance:,namespace:,location:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:30:03.653Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:30:03.653Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:29:53.920695707 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:29:58.922831989 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:30:03.701Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,namespace:,instance:,cluster:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:30:13.654Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:30:13.654Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:30:03.924980232 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:30:08.927161504 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:30:13.706Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,location:,instance:,namespace:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:30:23.655Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:30:23.655Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:30:13.929598666 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:30:18.931568418 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:30:23.711Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,cluster:,location:,job:vac-hub-service,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:30:33.656Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:30:33.656Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:30:23.93365523 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:30:28.936024182 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:30:33.705Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{namespace:,location:,cluster:,instance:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:30:43.657Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:30:43.657Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:30:33.938010585 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:30:38.940041797 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:30:43.719Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{location:,job:vac-hub-service,instance:,cluster:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:30:53.658Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:30:53.658Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:30:43.942085709 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:30:48.944271211 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:30:53.718Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,location:,cluster:,namespace:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:31:03.659Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:31:03.659Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:30:53.946286123 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:30:58.948644996 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:31:03.710Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,job:vac-hub-service,location:,namespace:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:31:13.659Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:31:13.660Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:31:03.951178478 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:31:08.95348952 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:31:13.707Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,namespace:,job:vac-hub-service,location:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:31:23.660Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:31:23.660Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:31:13.955633903 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:31:18.958031145 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:31:23.712Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,cluster:,namespace:,instance:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:31:33.664Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:31:33.664Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:31:23.960235077 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:31:28.962729179 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:31:33.717Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,location:,namespace:,instance:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:31:43.664Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:31:43.664Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:31:33.964758491 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:31:38.966767844 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:31:43.716Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{instance:,location:,namespace:,cluster:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:31:53.666Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:31:53.666Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:31:43.968720566 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:31:48.970920098 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:31:53.713Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{namespace:,location:,instance:,cluster:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:32:03.667Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:32:03.667Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:31:53.9732142 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:31:58.975206342 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:32:03.716Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,job:vac-hub-service,namespace:,instance:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:32:13.670Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:32:13.670Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:32:03.977468245 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:32:08.979727227 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:32:13.718Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{instance:,job:vac-hub-service,location:,cluster:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:32:23.672Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:32:23.673Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:32:13.982085149 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:32:18.984364571 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:32:23.726Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{cluster:,instance:,job:vac-hub-service,location:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:32:33.675Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:32:33.675Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:32:23.986633743 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:32:28.989127276 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:32:33.733Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{instance:,location:,namespace:,job:vac-hub-service,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:32:43.677Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:32:43.677Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:32:33.991542708 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:32:38.99371855 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:32:43.724Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,instance:,namespace:,cluster:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:32:53.677Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:32:53.677Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:32:43.996001813 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:32:48.998228055 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:32:53.724Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,instance:,namespace:,location:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:33:03.679Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:33:03.679Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:32:54.000864817 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:32:59.003033839 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:33:03.735Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,cluster:,namespace:,location:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:33:13.683Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:33:13.683Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:33:04.005343172 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:33:09.008028784 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:33:13.728Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,instance:,job:vac-hub-service,namespace:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:33:23.685Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:33:23.685Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:33:14.010718637 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:33:19.012922829 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:33:23.733Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,location:,cluster:,namespace:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:33:33.687Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:33:33.688Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:33:24.014905201 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:33:29.017435043 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:33:33.737Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,cluster:,instance:,location:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:33:43.690Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:33:43.690Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:33:34.019939266 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:33:39.022118568 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:33:43.890Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,instance:,cluster:,location:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:33:53.693Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:33:53.693Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:33:44.02456448 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:33:49.026594532 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:33:53.738Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,location:,job:vac-hub-service,namespace:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:34:03.696Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:34:03.696Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:33:54.028770535 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:33:59.030864927 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:34:03.746Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,cluster:,job:vac-hub-service,namespace:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:34:13.699Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:34:13.699Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:34:04.033189019 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:34:09.035542121 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:34:13.758Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{job:vac-hub-service,instance:,location:,namespace:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:34:23.702Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:34:23.702Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:34:14.037604373 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:34:19.040352106 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:34:23.756Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{cluster:,namespace:,location:,job:vac-hub-service,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:34:33.702Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:34:33.702Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:34:24.042758968 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:34:29.04491052 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:34:33.758Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,instance:,location:,namespace:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:34:43.705Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:34:43.706Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:34:34.047130082 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:34:39.049567285 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:34:43.755Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,namespace:,job:vac-hub-service,cluster:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:34:53.707Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:34:53.707Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:34:44.051968997 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:34:49.054025809 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:34:53.763Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{instance:,cluster:,location:,job:vac-hub-service,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:35:03.711Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:35:03.711Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:34:54.056614682 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:34:59.058631314 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:35:03.765Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{location:,cluster:,namespace:,job:vac-hub-service,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:35:13.713Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:35:13.713Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:35:04.060788906 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:35:09.063237268 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:35:13.774Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{namespace:,location:,cluster:,instance:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:35:23.715Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:35:23.715Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:35:14.06528709 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:35:19.067717713 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:35:23.767Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,location:,namespace:,cluster:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:35:33.717Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:35:33.717Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:35:24.069924215 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:35:29.072024017 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:35:33.769Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,job:vac-hub-service,cluster:,location:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:35:43.721Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:35:43.721Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:35:34.074106249 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:35:39.076634152 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:35:43.889Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,location:,namespace:,job:vac-hub-service,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:35:53.722Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:35:53.722Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:35:44.078761314 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:35:49.081279156 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:35:53.770Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,cluster:,job:vac-hub-service,instance:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:36:03.722Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:36:03.723Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:35:54.083417089 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:35:59.08519957 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:36:03.780Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,location:,instance:,cluster:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:36:13.726Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:36:13.726Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:36:04.087555763 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:36:09.089808715 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:36:13.773Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,namespace:,job:vac-hub-service,location:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:36:23.727Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:36:23.727Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:36:14.091955426 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:36:19.094180008 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:36:23.780Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,location:,job:vac-hub-service,namespace:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:36:33.730Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:36:33.730Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:36:24.096321929 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:36:29.09845454 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:36:33.785Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{cluster:,location:,job:vac-hub-service,instance:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:36:43.731Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:36:43.732Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:36:34.100759401 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:36:39.103532312 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:36:43.790Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,job:vac-hub-service,location:,instance:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:36:53.735Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:36:53.735Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:36:44.105768273 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:36:49.107997224 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:36:53.788Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{instance:,namespace:,job:vac-hub-service,cluster:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:37:03.738Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:37:03.738Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:36:54.109914406 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:36:59.112192877 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:37:03.792Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,location:,namespace:,cluster:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:37:13.738Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:37:13.739Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:37:04.114364648 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:37:09.116293159 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:37:13.786Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{cluster:,job:vac-hub-service,location:,instance:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:37:23.742Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:37:23.742Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:37:14.11844942 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:37:19.120815141 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:37:23.787Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,instance:,location:,namespace:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:37:33.744Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:37:33.744Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:37:24.123266092 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:37:29.125431483 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:37:33.799Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{location:,namespace:,cluster:,instance:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:37:43.746Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:37:43.746Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:37:34.127517335 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:37:39.129770766 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:37:43.796Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{job:vac-hub-service,instance:,namespace:,cluster:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:37:53.747Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:37:53.748Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:37:44.132165998 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:37:49.134366758 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:37:53.800Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,location:,cluster:,instance:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:38:03.749Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:38:03.749Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:37:54.136551849 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:37:59.13888845 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:38:03.800Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,namespace:,instance:,cluster:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:38:13.753Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:38:13.753Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:38:04.140968411 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:38:09.142953453 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:38:13.803Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,job:vac-hub-service,namespace:,instance:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:38:23.754Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:38:23.754Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:38:14.145081104 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:38:19.147373985 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:38:23.803Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{job:vac-hub-service,instance:,location:,namespace:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:38:33.756Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:38:33.757Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:38:24.149458966 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:38:29.151432747 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:38:33.809Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,cluster:,location:,instance:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:38:43.889Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:38:43.889Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:38:34.153763388 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:38:39.156415779 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:38:43.943Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,job:vac-hub-service,instance:,location:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:38:53.891Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:38:53.891Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:38:44.158470021 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:38:49.160791452 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:38:53.939Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,instance:,location:,job:vac-hub-service,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:39:03.892Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:39:03.892Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:38:54.162750853 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:38:59.164751544 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:39:03.946Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,namespace:,location:,instance:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:39:13.894Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:39:13.894Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:39:04.166554775 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:39:09.168743926 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:39:13.944Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,job:vac-hub-service,instance:,location:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:39:23.895Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:39:23.895Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:39:14.170900858 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:39:19.172956818 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:39:23.947Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{job:vac-hub-service,cluster:,instance:,location:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:39:33.895Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:39:33.896Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:39:24.17540616 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:39:29.177629641 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:39:33.940Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,location:,cluster:,namespace:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:39:43.899Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:39:43.899Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:39:34.179757962 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:39:39.181721133 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:39:43.952Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,instance:,location:,cluster:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:39:53.901Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:39:53.901Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:39:44.183800764 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:39:49.185996185 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:39:53.949Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,instance:,cluster:,location:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:40:03.905Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:40:03.905Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:39:54.188170736 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:39:59.190558968 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:40:03.971Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{location:,instance:,job:vac-hub-service,namespace:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:40:13.906Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:40:13.906Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:40:04.192574439 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:40:09.19477248 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:40:13.950Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{location:,instance:,namespace:,job:vac-hub-service,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:40:23.909Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:40:23.909Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:40:14.196988731 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:40:19.199366062 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:40:23.961Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,namespace:,cluster:,job:vac-hub-service,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:40:33.912Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:40:33.912Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:40:24.201474554 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:40:29.203792185 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:40:33.964Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,location:,namespace:,instance:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:40:43.915Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:40:43.916Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:40:34.205820326 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:40:39.208533837 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:40:43.967Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{instance:,cluster:,namespace:,location:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:40:53.918Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:40:53.918Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:40:44.210440928 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:40:49.212591199 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:40:53.976Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{job:vac-hub-service,instance:,location:,cluster:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:41:03.922Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:41:03.922Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:40:54.21446228 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:40:59.216531151 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:41:03.977Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{cluster:,job:vac-hub-service,namespace:,instance:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:41:13.925Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:41:13.926Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:41:04.218755282 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:41:09.220982794 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:41:13.978Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,cluster:,instance:,location:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:41:23.927Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:41:23.927Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:41:14.223081504 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:41:19.224829096 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:41:23.978Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{location:,namespace:,instance:,cluster:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:41:33.930Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:41:33.930Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:41:24.227387287 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:41:29.229929668 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:41:33.981Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{job:vac-hub-service,cluster:,namespace:,instance:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:41:43.933Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:41:43.933Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:41:34.232070059 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:41:39.23405147 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:41:43.974Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{location:,namespace:,instance:,job:vac-hub-service,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:41:53.935Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:41:53.935Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:41:44.236396851 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:41:49.238561623 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:41:53.991Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,location:,job:vac-hub-service,namespace:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:42:03.938Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:42:03.938Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:41:54.240732094 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:41:59.242728974 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:42:03.989Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,location:,namespace:,cluster:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:42:13.939Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:42:13.939Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:42:04.244771526 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:42:09.246831697 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:42:13.989Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{namespace:,job:vac-hub-service,cluster:,location:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:42:23.943Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:42:23.943Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:42:14.248838498 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:42:19.251136549 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:42:23.989Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{job:vac-hub-service,cluster:,location:,namespace:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:42:33.946Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:42:33.946Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:42:24.25300129 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:42:29.255228391 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:42:33.995Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{namespace:,job:vac-hub-service,instance:,location:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:42:43.950Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:42:43.950Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:42:34.257049012 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:42:39.259968993 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:42:44.003Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,cluster:,location:,job:vac-hub-service,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:42:53.953Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:42:53.953Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:42:44.262092014 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:42:49.264427806 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:42:54.008Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,job:vac-hub-service,namespace:,location:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:43:03.954Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:43:03.955Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:42:54.266968027 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:42:59.269088458 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:43:04.005Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,cluster:,location:,instance:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:43:13.958Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:43:13.958Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:43:04.271538399 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:43:09.274117951 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:43:14.012Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,location:,namespace:,cluster:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:43:23.958Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:43:23.958Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:43:14.276372312 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:43:19.278613903 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:43:24.007Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{cluster:,location:,job:vac-hub-service,namespace:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:43:33.962Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:43:33.962Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:43:24.280759344 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:43:29.282794395 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:43:34.015Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{cluster:,location:,instance:,namespace:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:43:43.964Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:43:43.964Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:43:34.285188917 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:43:39.287066208 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:43:44.140Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,cluster:,location:,namespace:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:43:53.967Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:43:53.967Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:43:44.289073919 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:43:49.29112726 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:43:54.022Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,namespace:,job:vac-hub-service,cluster:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:44:03.970Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:44:03.970Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:43:54.293230101 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:43:59.295350712 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:44:04.139Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,job:vac-hub-service,namespace:,instance:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:44:13.973Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:44:13.974Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:44:04.389139941 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:44:09.391416722 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:44:14.026Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{job:vac-hub-service,cluster:,location:,namespace:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:44:23.976Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:44:23.976Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:44:14.394522114 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:44:19.396814665 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:44:24.029Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,job:vac-hub-service,namespace:,instance:,location:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:44:33.980Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:44:33.980Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:44:24.398965416 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:44:29.401127007 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:44:34.031Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): write for resource=prometheus_target{job:vac-hub-service,cluster:,location:,instance:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:44:43.982Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:44:43.983Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:44:34.403265469 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:44:39.40618735 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:44:44.033Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{job:vac-hub-service,namespace:,instance:,location:,cluster:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:44:53.985Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:44:53.985Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:44:44.408143501 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:44:49.410934892 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:44:54.037Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{namespace:,cluster:,job:vac-hub-service,location:,instance:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:45:03.989Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:45:03.989Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:44:54.413332463 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:44:59.415497765 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:45:04.043Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,location:,job:vac-hub-service,cluster:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:45:13.992Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:45:13.992Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:45:04.417736626 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:45:09.419756907 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:45:14.042Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_name\": \"grpc.server.python.streaming_service\", \"otel_scope_version\": \"\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{instance:,location:,namespace:,cluster:,job:vac-hub-service} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
2025-07-22T05:45:23.993Z	info	MetricsExporter	{"kind": "exporter", "data_type": "metrics", "name": "logging", "resource metrics": 2, "metrics": 2, "data points": 2}
2025-07-22T05:45:23.993Z	info	ResourceMetrics #0
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:45:14.421826348 +0000 UTC
Value: 246415
ResourceMetrics #1
Resource SchemaURL: 
Resource attributes:
     -> service.name: Str(vac-hub-service)
ScopeMetrics #0
ScopeMetrics SchemaURL: 
InstrumentationScope grpc.server.python.streaming_service 
Metric #0
Descriptor:
     -> Name: app.messages.processed.count
     -> Description: The total number of messages processed by the streaming service
     -> Unit: 1
     -> DataType: Sum
     -> IsMonotonic: true
     -> AggregationTemporality: Cumulative
NumberDataPoints #0
StartTimestamp: 2025-07-22 00:53:53.11317203 +0000 UTC
Timestamp: 2025-07-22 05:45:19.423975029 +0000 UTC
Value: 246415
	{"kind": "exporter", "data_type": "metrics", "name": "logging"}
2025-07-22T05:45:24.033Z	error	exporterhelper/queue_sender.go:101	Exporting failed. Dropping data.	{"kind": "exporter", "data_type": "metrics", "name": "googlemanagedprometheus", "error": "rpc error: code = InvalidArgument desc = One or more TimeSeries could not be written: timeSeries[2] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): value type for metric must be DOUBLE, but is INT64; timeSeries[5] (metric.type=\"prometheus.googleapis.com/target_info/gauge\", metric.labels={}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[3] (metric.type=\"prometheus.googleapis.com/app_messages_processed_count_total/counter\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[4] (metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): Duplicate TimeSeries encountered. Only one point can be written per TimeSeries per request.; timeSeries[0,1] (example metric.type=\"prometheus.googleapis.com/otel_scope_info/gauge\", metric.labels={\"otel_scope_version\": \"\", \"otel_scope_name\": \"grpc.server.python.streaming_service\"}): write for resource=prometheus_target{cluster:,job:vac-hub-service,location:,instance:,namespace:} failed with: Unrecognized region or location.\nerror details: name = Unknown  desc = total_point_count:6  errors:{status:{code:3}  point_count:6}", "dropped_items": 2}
go.opentelemetry.io/collector/exporter/exporterhelper.newQueueSender.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/exporterhelper/queue_sender.go:101
go.opentelemetry.io/collector/exporter/internal/queue.(*boundedMemoryQueue[...]).Consume
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/bounded_memory_queue.go:52
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
	go.opentelemetry.io/collector/exporter@v0.100.0/internal/queue/consumers.go:43
